import React from "react";
import { useState, useEffect, useCallback } from "react";
import LauoutDefault from "../../../components/User/LauoutDefault";
import { useDispatch, useSelector } from "react-redux";
import {
  Empty,
  Card,
  Skeleton,
  Select,
  Modal,
  Radio,
  Space,
  Checkbox,
  Button
} from "antd";
import productImage from "../../../assets/images/productImage.png";
import {
  SORT,
  BRANCH_LIST,
  COUNTRY_LIST,
  SIZE_LIST,
  TYPE_LIST,
  PRICE_LIST,
} from "../../../constants/common";
import { useNavigate } from "react-router-dom";
import { Formik } from "formik";
const ProductUser = () => {
  const navigate = useNavigate();
  const dispatch = useDispatch();
  // let location = useLocation();
  const Loading = useSelector((state) => state.Loading);
  const listProductUser = useSelector((state) => state.listProductUser);
  const [sort, setSort] = useState("1");
  // let searchParams = new URLSearchParams(location.search);
  
  const [openModalFilter, setOpenModalFilter] = useState(false);
  const viewDetail = (id) => {
    navigate(`/product/${id}`);
  };

  const initialValues = {
    size: [],
    brand: "",
    country: [],
    type: [],
    price_each: [],
  };

  const handleCancel = () => {
    setOpenModalFilter(false);
  };

  const handleSubmit = useCallback(
    (values) => {
      dispatch({
        type: "CREATE_PRODUCT",
        payload: values,
      });
      setOpenModalFilter(false);
    },
    // eslint-disable-next-line
    [initialValues, dispatch]
  );

  useEffect(() => {
    dispatch({ type: "GET_ALL_PRODUCT_USER" });
     // eslint-disable-next-line
  }, [dispatch]);

  return (
    <LauoutDefault>
      {Loading ? (
        <div className="tw-p-6 container 3xl:tw-my-0 3xl:tw-min-h-[calc(100vh_-_476px)]">
          <Skeleton />
        </div>
      ) : (
        <div className="tw-p-6 container 3xl:tw-my-0 3xl:tw-min-h-[calc(100vh_-_476px)]">
          <div className="tw-flex tw-items-center tw-justify-between tw-my-6">
            <div className="tw-text-white tw-text-[20px]">
              Tất cả:
              <span className="tw-font-[600]">
                {listProductUser.listProductUser}
              </span>
              sản phẩm
            </div>
            <div className="tw-flex tw-items-center tw-justify-end">
              <div className=" tw-w-[200px] tw-text-white">Thứ tự hiển thị</div>
              <Select
                name="size"
                className="tw-w-full"
                defaultValue={sort || ""}
                placeholder="Chọn kích thước"
                onChange={(value) => {
                  setSort(value);
                }}
                options={SORT}
              />
            </div>
          </div>
          <div className="tw-flex tw-items-center tw-mb-6">
            <div className="tw-text-white">Lọc sản phẩm theo :</div>
            <div
              className="tw-flex tw-items-center tw-ml-3"
              onClick={() => setOpenModalFilter(true)}
            >
              <div className="tw-text-white tw-bg-[#DC1914] tw-py-[6px] tw-px-4 tw-rounded-[16px] ">
                Hãng: TRUMPETER
              </div>
            </div>
            <div className="tw-flex tw-items-center tw-ml-3">
              <div className="tw-text-white tw-bg-[#DC1914] tw-py-[6px] tw-px-4 tw-rounded-[16px] ">
                Tất cả
              </div>
            </div>
            <div className="tw-flex tw-items-center tw-ml-3">
              <div className="tw-text-white tw-bg-[#DC1914] tw-py-[6px] tw-px-4 tw-rounded-[16px] ">
                1/35
              </div>
            </div>
          </div>
          {listProductUser?.length > 0 ? (
            <div className="tw-p-6 tw-flex tw-flex-wrap tw-w-full">
              {listProductUser.map((i) => (
                <Card
                  key={i.id}
                  hoverable={true}
                  style={{
                    width: "calc(25% - 24px)",
                    maxWidth: "350px",
                    minWidth: "200px",
                    marginRight: "24px",
                    padding: "8px",
                  }}
                  className="hoverable-card"
                  cover={<img alt="example" src={productImage} />}
                  onClick={() => viewDetail(i.id)}
                >
                  <div>
                    <div className="tw-text-white tw-font-[700] tw-mb-4">
                      {i?.name}
                    </div>
                    <div className="tw-flex tw-items-center tw-justify-between">
                      <div className="tw-text-[#FFC43F] tw-text-[18px] tw-font-[700] tw-leading-[36px]">
                        {i.price_each}VND
                      </div>
                      <div className="tw-text-white ">
                        SL:<span>{i.product_quantity}</span>
                      </div>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          ) : (
            <Empty />
          )}
        </div>
      )}
      <Modal
        title="Bộ lọc sản phẩm"
        open={openModalFilter}
        centered={true}
        onCancel={handleCancel}
        width={1150}
        footer={null}
        styles={{ background: "#33322C" }}
        className="modal-filter"
      >
        <Formik
          initialValues={initialValues}
          enableReinitialize
          onSubmit={handleSubmit}
        >
          {({ values, setFieldValue, handleSubmit }) => {
            return (
              <div className="tw-bg-[#33322C] tw-rounded-[10px] tw-flex tw-items-center  tw-flex-col">
                <div className="tw-flex tw-w-full tw-mb-4">
                  <div className="tw-w-1/3 tw-px-3">
                    <div className=" tw-mb-3 tw-flex">
                      <svg
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M10.69 5.98316L9.97455 5.75812L10.69 5.98316ZM8.5704 9.54025L9.0206 8.9404L8.5704 9.54025ZM9.07077 11.131L9.78621 11.3561L9.07077 11.131ZM11.1904 12.7218L10.7402 12.122L11.1904 12.7218ZM12.8096 12.7218L13.2598 12.122L12.8096 12.7218ZM14.9292 11.131L14.2137 11.3561L14.9292 11.131ZM15.4296 9.54025L14.9794 8.9404L15.4296 9.54025ZM13.31 5.98316L14.0254 5.75812L13.31 5.98316ZM9.87285 17.831L9.22333 17.456L9.87285 17.831ZM8.11629 20.8734L8.76581 21.2484L8.11629 20.8734ZM1.83039 17.2443L1.18088 16.8693H1.18088L1.83039 17.2443ZM3.58695 14.2018L4.23647 14.5768H4.23647L3.58695 14.2018ZM6.23289 20.7121L5.52321 20.9547L5.52321 20.9547L6.23289 20.7121ZM5.98905 19.9988L6.69873 19.7562L6.69873 19.7562L5.98905 19.9988ZM3.65145 18.6492L3.5067 17.9133H3.5067L3.65145 18.6492ZM2.91177 18.7947L3.05651 19.5306H3.05651L2.91177 18.7947ZM5.24202 18.5935L5.61702 17.944H5.61702L5.24202 18.5935ZM1.27768 18.8052L0.662524 19.2343L1.27768 18.8052ZM10.3801 16.9319L9.78088 16.4808L9.74488 16.5287L9.71692 16.5816L10.3801 16.9319ZM13.8488 17.831L14.4983 17.456L13.8488 17.831ZM15.6053 20.8734L16.2549 20.4984L15.6053 20.8734ZM21.8912 17.2443L22.5408 16.8693L21.8912 17.2443ZM20.1347 14.2018L19.4852 14.5768L20.1347 14.2018ZM17.4887 20.7121L18.1984 20.9547V20.9547L17.4887 20.7121ZM17.7326 19.9988L17.0229 19.7562V19.7562L17.7326 19.9988ZM20.0702 18.6492L20.2149 17.9133L20.0702 18.6492ZM20.8099 18.7947L20.6651 19.5306L20.8099 18.7947ZM22.444 18.8052L23.0591 19.2343V19.2343L22.444 18.8052ZM13.3372 16.9237H12.5872V17.1092L12.6737 17.2733L13.3372 16.9237ZM4.82744 12.5473L4.15542 12.8803L4.82744 12.5473ZM10.4428 16.8485L10.588 16.1127L10.4428 16.8485ZM13.3372 16.8887L13.2128 16.1491L13.3372 16.8887ZM19.1125 12.6659L18.4461 12.3217L19.1125 12.6659ZM4.48144 12.7988L3.91783 12.3039L4.48144 12.7988ZM4.74998 9C4.74998 4.99594 7.99591 1.75 12 1.75V0.25C7.16748 0.25 3.24998 4.16751 3.24998 9H4.74998ZM12 1.75C16.004 1.75 19.25 4.99594 19.25 9H20.75C20.75 4.16751 16.8325 0.25 12 0.25V1.75ZM9.38001 7.71631C10.3176 7.71631 11.1268 7.09399 11.4054 6.20819L9.97455 5.75812C9.88438 6.0448 9.63591 6.21631 9.38001 6.21631V7.71631ZM9.0206 8.9404C8.76926 8.75176 8.69693 8.45601 8.78547 8.17451C8.87348 7.89471 9.08995 7.71631 9.38001 7.71631V6.21631C7.27095 6.21631 6.50788 8.93003 8.1202 10.1401L9.0206 8.9404ZM9.78621 11.3561C10.0637 10.4739 9.76394 9.49829 9.0206 8.9404L8.1202 10.1401C8.34238 10.3068 8.44665 10.6157 8.35533 10.906L9.78621 11.3561ZM10.7402 12.122C10.4976 12.304 10.2328 12.2807 10.0213 12.122C9.80637 11.9606 9.68377 11.6818 9.78621 11.3561L8.35533 10.906C8.04544 11.8912 8.4429 12.8128 9.12094 13.3217C9.80249 13.8332 10.8037 13.9498 11.6406 13.3217L10.7402 12.122ZM13.2598 12.122C12.5103 11.5594 11.4897 11.5594 10.7402 12.122L11.6406 13.3217C11.8566 13.1595 12.1434 13.1595 12.3594 13.3217L13.2598 12.122ZM14.2137 11.3561C14.3162 11.6818 14.1936 11.9606 13.9786 12.122C13.7672 12.2807 13.5024 12.304 13.2598 12.122L12.3594 13.3217C13.1963 13.9498 14.1975 13.8332 14.879 13.3217C15.5571 12.8128 15.9545 11.8912 15.6446 10.906L14.2137 11.3561ZM14.9794 8.9404C14.236 9.49828 13.9363 10.4739 14.2137 11.3561L15.6446 10.906C15.5533 10.6157 15.6576 10.3068 15.8797 10.1401L14.9794 8.9404ZM14.6199 7.71631C14.91 7.71631 15.1265 7.89471 15.2145 8.17451C15.303 8.45601 15.2307 8.75176 14.9794 8.9404L15.8797 10.1401C17.4921 8.93003 16.729 6.21631 14.6199 6.21631V7.71631ZM12.5945 6.20819C12.8731 7.09399 13.6824 7.71631 14.6199 7.71631V6.21631C14.364 6.21631 14.1156 6.0448 14.0254 5.75812L12.5945 6.20819ZM14.0254 5.75812C13.3929 3.74729 10.607 3.74729 9.97455 5.75812L11.4054 6.20819C11.5976 5.59727 12.4024 5.59727 12.5945 6.20819L14.0254 5.75812ZM9.22333 17.456L7.46677 20.4984L8.76581 21.2484L10.5224 18.206L9.22333 17.456ZM2.47991 17.6193L4.23647 14.5768L2.93743 13.8268L1.18088 16.8693L2.47991 17.6193ZM6.94257 20.4696L6.69873 19.7562L5.27937 20.2414L5.52321 20.9547L6.94257 20.4696ZM3.5067 17.9133L2.76703 18.0588L3.05651 19.5306L3.79619 19.3851L3.5067 17.9133ZM6.69873 19.7562C6.56678 19.3702 6.44639 19.0137 6.31011 18.7351C6.16472 18.4379 5.96198 18.1431 5.61702 17.944L4.86702 19.243C4.86829 19.2437 4.8688 19.2441 4.86967 19.2449C4.87071 19.2458 4.87467 19.2493 4.88158 19.2576C4.89662 19.2759 4.92383 19.3148 4.96268 19.3942C5.04773 19.5681 5.13476 19.8184 5.27937 20.2414L6.69873 19.7562ZM3.79619 19.3851C4.23485 19.2988 4.49512 19.2491 4.68822 19.2358C4.77641 19.2297 4.82376 19.2338 4.84706 19.2377C4.85777 19.2395 4.8628 19.2412 4.86408 19.2416C4.86517 19.242 4.86575 19.2423 4.86702 19.243L5.61702 17.944C5.27206 17.7448 4.9154 17.7166 4.58531 17.7393C4.2759 17.7606 3.90697 17.8346 3.5067 17.9133L3.79619 19.3851ZM1.18088 16.8693C0.945573 17.2768 0.72565 17.654 0.600869 17.9642C0.483135 18.2569 0.334863 18.7645 0.662524 19.2343L1.89283 18.3762C2.02982 18.5726 1.91011 18.7289 1.99251 18.524C2.06786 18.3367 2.21963 18.0701 2.47991 17.6193L1.18088 16.8693ZM2.76703 18.0588C2.2607 18.1584 1.96478 18.2146 1.76813 18.2244C1.55497 18.235 1.75169 18.1738 1.89283 18.3762L0.662524 19.2343C0.994336 19.71 1.52696 19.7382 1.84261 19.7225C2.17477 19.706 2.60056 19.6203 3.05651 19.5306L2.76703 18.0588ZM7.46677 20.4984C7.20649 20.9493 7.0515 21.214 6.92695 21.3729C6.79075 21.5467 6.86622 21.3649 7.10481 21.3853L6.97683 22.8798C7.54751 22.9287 7.91292 22.5465 8.10754 22.2982C8.3138 22.035 8.53051 21.656 8.76581 21.2484L7.46677 20.4984ZM5.52321 20.9547C5.67353 21.3945 5.81217 21.8061 5.96395 22.102C6.10818 22.3832 6.39892 22.8304 6.97683 22.8798L7.10481 21.3853C7.35063 21.4064 7.39602 21.6073 7.29862 21.4174C7.20877 21.2422 7.10949 20.9578 6.94257 20.4695L5.52321 20.9547ZM4.23647 14.5768C4.66368 13.8369 4.85968 13.5047 5.04504 13.2936L3.91783 12.3039C3.61 12.6546 3.32832 13.1498 2.93743 13.8268L4.23647 14.5768ZM10.5224 18.206C10.7324 17.8422 10.9073 17.5396 11.0432 17.2823L9.71692 16.5816C9.59712 16.8083 9.43862 17.0831 9.22333 17.456L10.5224 18.206ZM13.1993 18.206L14.9558 21.2484L16.2549 20.4984L14.4983 17.456L13.1993 18.206ZM22.5408 16.8693L20.7842 13.8268L19.4852 14.5768L21.2417 17.6193L22.5408 16.8693ZM18.1984 20.9547L18.4423 20.2414L17.0229 19.7562L16.7791 20.4696L18.1984 20.9547ZM19.9254 19.3851L20.6651 19.5306L20.9546 18.0588L20.2149 17.9133L19.9254 19.3851ZM18.4423 20.2414C18.5869 19.8184 18.6739 19.5681 18.759 19.3942C18.7978 19.3148 18.825 19.2759 18.84 19.2576C18.847 19.2493 18.8509 19.2458 18.852 19.2449C18.8528 19.2441 18.8533 19.2437 18.8546 19.243L18.1046 17.944C17.7597 18.1431 17.5569 18.4379 17.4115 18.7351C17.2752 19.0137 17.1549 19.3702 17.0229 19.7562L18.4423 20.2414ZM20.2149 17.9133C19.8147 17.8346 19.4457 17.7606 19.1363 17.7393C18.8062 17.7166 18.4496 17.7448 18.1046 17.944L18.8546 19.243C18.8559 19.2423 18.8565 19.242 18.8575 19.2416C18.8588 19.2412 18.8639 19.2395 18.8746 19.2377C18.8979 19.2338 18.9452 19.2297 19.0334 19.2358C19.2265 19.2491 19.4868 19.2988 19.9254 19.3851L20.2149 17.9133ZM21.2417 17.6193C21.502 18.0701 21.6538 18.3367 21.7291 18.524C21.8115 18.7288 21.6918 18.5726 21.8288 18.3762L23.0591 19.2343C23.3868 18.7645 23.2385 18.2569 23.1208 17.9642C22.996 17.654 22.7761 17.2768 22.5408 16.8693L21.2417 17.6193ZM20.6651 19.5306C21.1211 19.6203 21.5469 19.706 21.879 19.7225C22.1947 19.7382 22.7273 19.71 23.0591 19.2343L21.8288 18.3762C21.9699 18.1738 22.1667 18.235 21.9535 18.2244C21.7569 18.2146 21.4609 18.1584 20.9546 18.0588L20.6651 19.5306ZM14.9558 21.2484C15.1911 21.656 15.4078 22.035 15.6141 22.2982C15.8087 22.5465 16.1741 22.9287 16.7448 22.8798L16.6168 21.3853C16.8554 21.3649 16.9309 21.5467 16.7947 21.3729C16.6701 21.214 16.5151 20.9493 16.2549 20.4984L14.9558 21.2484ZM16.7791 20.4695C16.6121 20.9578 16.5129 21.2422 16.423 21.4174C16.3256 21.6073 16.371 21.4064 16.6168 21.3853L16.7448 22.8798C17.3227 22.8304 17.6134 22.3832 17.7577 22.102C17.9095 21.8061 18.0481 21.3945 18.1984 20.9547L16.7791 20.4695ZM14.4983 17.456C14.2805 17.0788 14.1209 16.802 14.0007 16.574L12.6737 17.2733C12.8104 17.5328 12.9869 17.8381 13.1993 18.206L14.4983 17.456ZM5.49947 12.2143C5.0199 11.2465 4.74998 10.1558 4.74998 9H3.24998C3.24998 10.392 3.57556 11.7101 4.15542 12.8803L5.49947 12.2143ZM12 16.25C11.5161 16.25 11.0441 16.2027 10.588 16.1127L10.2977 17.5844C10.8489 17.6931 11.4182 17.75 12 17.75V16.25ZM10.588 16.1127C8.35288 15.6718 6.48415 14.2015 5.49947 12.2143L4.15542 12.8803C5.34259 15.2761 7.59539 17.0513 10.2977 17.5844L10.588 16.1127ZM10.9792 17.383L11.042 17.2996L9.84364 16.3975L9.78088 16.4808L10.9792 17.383ZM13.2128 16.1491C12.8189 16.2154 12.4138 16.25 12 16.25V17.75C12.4975 17.75 12.9859 17.7084 13.4617 17.6283L13.2128 16.1491ZM14.0872 16.9237V16.8887H12.5872V16.9237H14.0872ZM19.25 9C19.25 10.1987 18.9596 11.3274 18.4461 12.3217L19.7789 13.01C20.3997 11.8079 20.75 10.4438 20.75 9H19.25ZM18.4461 12.3217C17.4178 14.3128 15.4949 15.7651 13.2128 16.1491L13.4617 17.6283C16.2211 17.164 18.5394 15.41 19.7789 13.01L18.4461 12.3217ZM20.7842 13.8268C20.3325 13.0445 20.0252 12.4962 19.6275 12.1206L18.5975 13.2111C18.7954 13.3981 18.9793 13.7006 19.4852 14.5768L20.7842 13.8268ZM5.04504 13.2936C5.0513 13.2865 5.07895 13.2597 5.16073 13.2192L4.49416 11.8754C4.31796 11.9628 4.10157 12.0947 3.91783 12.3039L5.04504 13.2936Z"
                          fill="#FAFAFA"
                        />
                      </svg>
                      <span className="tw-text-[14px] tw-font-[500] tw-ml-3">
                        Hãng
                      </span>
                    </div>
                    <Radio.Group
                      className="tw-block"
                      name="brand"
                      onChange={(e) => setFieldValue("brand", e.target.value)}
                      value={values.brand}
                    >
                      <Space className="tw-px-3" direction="vertical">
                        {BRANCH_LIST.map((i, index) => {
                          return (
                            <Radio
                              className="!tw-text-[#ffffffcc]"
                              key={index}
                              value={i.value}
                            >
                              {i.label}
                            </Radio>
                          );
                        })}
                      </Space>
                    </Radio.Group>
                  </div>
                  <div className="tw-w-1/3 tw-px-3">
                    <div className=" tw-mb-3 tw-flex">
                      <svg
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M4 7C4 6.06812 4 5.60218 4.15224 5.23463C4.35523 4.74458 4.74458 4.35523 5.23463 4.15224C5.60218 4 6.06812 4 7 4C7.93188 4 8.39782 4 8.76537 4.15224C9.25542 4.35523 9.64477 4.74458 9.84776 5.23463C10 5.60218 10 6.06812 10 7C10 7.93188 10 8.39782 9.84776 8.76537C9.64477 9.25542 9.25542 9.64477 8.76537 9.84776C8.39782 10 7.93188 10 7 10C6.06812 10 5.60218 10 5.23463 9.84776C4.74458 9.64477 4.35523 9.25542 4.15224 8.76537C4 8.39782 4 7.93188 4 7Z"
                          stroke="#FAFAFA"
                          stroke-width="1.5"
                        />
                        <path
                          d="M14 7C14 6.06812 14 5.60218 14.1522 5.23463C14.3552 4.74458 14.7446 4.35523 15.2346 4.15224C15.6022 4 16.0681 4 17 4C17.9319 4 18.3978 4 18.7654 4.15224C19.2554 4.35523 19.6448 4.74458 19.8478 5.23463C20 5.60218 20 6.06812 20 7C20 7.93188 20 8.39782 19.8478 8.76537C19.6448 9.25542 19.2554 9.64477 18.7654 9.84776C18.3978 10 17.9319 10 17 10C16.0681 10 15.6022 10 15.2346 9.84776C14.7446 9.64477 14.3552 9.25542 14.1522 8.76537C14 8.39782 14 7.93188 14 7Z"
                          stroke="#FAFAFA"
                          stroke-width="1.5"
                        />
                        <path
                          d="M4 17C4 16.0681 4 15.6022 4.15224 15.2346C4.35523 14.7446 4.74458 14.3552 5.23463 14.1522C5.60218 14 6.06812 14 7 14C7.93188 14 8.39782 14 8.76537 14.1522C9.25542 14.3552 9.64477 14.7446 9.84776 15.2346C10 15.6022 10 16.0681 10 17C10 17.9319 10 18.3978 9.84776 18.7654C9.64477 19.2554 9.25542 19.6448 8.76537 19.8478C8.39782 20 7.93188 20 7 20C6.06812 20 5.60218 20 5.23463 19.8478C4.74458 19.6448 4.35523 19.2554 4.15224 18.7654C4 18.3978 4 17.9319 4 17Z"
                          stroke="#FAFAFA"
                          stroke-width="1.5"
                        />
                        <path
                          d="M14 17C14 16.0681 14 15.6022 14.1522 15.2346C14.3552 14.7446 14.7446 14.3552 15.2346 14.1522C15.6022 14 16.0681 14 17 14C17.9319 14 18.3978 14 18.7654 14.1522C19.2554 14.3552 19.6448 14.7446 19.8478 15.2346C20 15.6022 20 16.0681 20 17C20 17.9319 20 18.3978 19.8478 18.7654C19.6448 19.2554 19.2554 19.6448 18.7654 19.8478C18.3978 20 17.9319 20 17 20C16.0681 20 15.6022 20 15.2346 19.8478C14.7446 19.6448 14.3552 19.2554 14.1522 18.7654C14 18.3978 14 17.9319 14 17Z"
                          stroke="#FAFAFA"
                          stroke-width="1.5"
                        />
                      </svg>

                      <span className="tw-text-[14px] tw-font-[500] tw-ml-3">
                        Loại mô hình
                      </span>
                    </div>

                    <Checkbox.Group
                      style={{ width: "100%" }}
                      onChange={(e) => setFieldValue("type", e)}
                    >
                      <Space className="tw-px-3 tw-w-full" direction="vertical">
                        {TYPE_LIST.map((i) => {
                          return (
                            <div
                              key={i.value}
                              className="tw-flex tw-w-full tw-justify-between"
                            >
                              <div className="tw-text-[#ffffffcc]">{i.label}</div>
                              <Checkbox name="type" value={i.value}></Checkbox>
                            </div>
                          );
                        })}
                      </Space>
                    </Checkbox.Group>
                  </div>
                  <div className="tw-w-1/3 tw-px-3">
                    <div className=" tw-mb-3 tw-flex">
                      <svg
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M2 3.06818C1.58579 3.06818 1.25 3.40397 1.25 3.81818C1.25 4.2324 1.58579 4.56818 2 4.56818V3.06818ZM22 20.9318C22.4142 20.9318 22.75 20.596 22.75 20.1818C22.75 19.7676 22.4142 19.4318 22 19.4318V20.9318ZM4.56818 2C4.56818 1.58579 4.2324 1.25 3.81818 1.25C3.40397 1.25 3.06818 1.58579 3.06818 2H4.56818ZM19.4319 22C19.4319 22.4142 19.7677 22.75 20.1819 22.75C20.5961 22.75 20.9319 22.4142 20.9319 22L19.4319 22ZM3.81818 4.56818H10.1818V3.06818H3.81818V4.56818ZM19.4318 13.8182V20.1818H20.9318V13.8182H19.4318ZM20.1818 19.4318H13.8182V20.9318H20.1818V19.4318ZM4.56818 10.1818V3.81818H3.06818V10.1818H4.56818ZM13.8182 19.4318C11.44 19.4318 9.73173 19.4302 8.43176 19.2554C7.15336 19.0836 6.38263 18.7567 5.81298 18.187L4.75232 19.2477C5.64713 20.1425 6.78715 20.5478 8.23189 20.7421C9.65505 20.9334 11.4824 20.9318 13.8182 20.9318V19.4318ZM3.06818 10.1818C3.06818 12.5176 3.06659 14.345 3.25793 15.7681C3.45217 17.2128 3.85751 18.3529 4.75232 19.2477L5.81298 18.187C5.24332 17.6174 4.91643 16.8466 4.74455 15.5682C4.56977 14.2683 4.56818 12.56 4.56818 10.1818H3.06818ZM10.1818 4.56818C12.56 4.56818 14.2683 4.56977 15.5682 4.74455C16.8466 4.91643 17.6174 5.24332 18.187 5.81298L19.2477 4.75232C18.3529 3.85751 17.2128 3.45217 15.7681 3.25793C14.345 3.06659 12.5176 3.06818 10.1818 3.06818V4.56818ZM20.9318 13.8182C20.9318 11.4824 20.9334 9.65505 20.7421 8.23189C20.5478 6.78715 20.1425 5.64713 19.2477 4.75232L18.187 5.81298C18.7567 6.38263 19.0836 7.15336 19.2554 8.43176C19.4302 9.73174 19.4318 11.44 19.4318 13.8182H20.9318ZM2 4.56818H3.81818V3.06818H2V4.56818ZM22 19.4318H20.1818V20.9318H22V19.4318ZM3.06818 2V3.81818H4.56818V2H3.06818ZM20.9319 22L20.9318 20.1818L19.4318 20.1818L19.4319 22L20.9319 22ZM13.25 12C13.25 12.6904 12.6904 13.25 12 13.25V14.75C13.5188 14.75 14.75 13.5188 14.75 12H13.25ZM12 13.25C11.3096 13.25 10.75 12.6904 10.75 12H9.25C9.25 13.5188 10.4812 14.75 12 14.75V13.25ZM10.75 12C10.75 11.3096 11.3096 10.75 12 10.75V9.25C10.4812 9.25 9.25 10.4812 9.25 12H10.75ZM12 10.75C12.6904 10.75 13.25 11.3096 13.25 12H14.75C14.75 10.4812 13.5188 9.25 12 9.25V10.75Z"
                          fill="#FAFAFA"
                        />
                      </svg>
                      <span className="tw-text-[14px] tw-font-[500] tw-ml-3">
                        Kích thước
                      </span>
                    </div>

                    <Checkbox.Group
                      style={{ width: "100%" }}
                      onChange={(e) => setFieldValue("size", e)}
                    >
                      <Space className="tw-px-3 tw-w-full" direction="vertical">
                        {SIZE_LIST.map((i) => {
                          return (
                            <div
                              key={i.value}
                              className="tw-flex tw-w-full tw-justify-between"
                            >
                              <div className="tw-text-[#ffffffcc]">{i.label}</div>
                              <Checkbox name="size" value={i.value}></Checkbox>
                            </div>
                          );
                        })}
                      </Space>
                    </Checkbox.Group>
                  </div>
                </div>
                <div className="tw-flex tw-w-full tw-mb-4">
                  <div className="tw-w-1/3 tw-px-3">
                    <div className=" tw-mb-3 tw-flex">
                      <svg
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M11.25 19C11.25 19.4142 11.5858 19.75 12 19.75C12.4142 19.75 12.75 19.4142 12.75 19L11.25 19ZM12.75 5C12.75 4.58579 12.4142 4.25 12 4.25C11.5858 4.25 11.25 4.58579 11.25 5H12.75ZM14.4377 8.45175C14.6448 8.81047 15.1035 8.93337 15.4622 8.72626C15.8209 8.51916 15.9438 8.06047 15.7367 7.70175L14.4377 8.45175ZM14.7116 7.42625L15.3611 7.05125L14.7116 7.42625ZM11.13 11.68L11.3889 10.9761L11.13 11.68ZM12.8701 12.32L13.129 11.6161L13.129 11.6161L12.8701 12.32ZM9.28847 16.5738L8.63895 16.9488H8.63895L9.28847 16.5738ZM9.56243 15.5483C9.35532 15.1895 8.89663 15.0666 8.53791 15.2737C8.17919 15.4808 8.05628 15.9395 8.26339 16.2983L9.56243 15.5483ZM13.3278 17.6561L12.9528 17.0066L13.3278 17.6561ZM10.6723 6.34391L11.0473 6.99343L10.6723 6.34391ZM5.06107 20.0451L5.50191 19.4383L5.06107 20.0451ZM3.95491 18.9389L4.56168 18.4981L3.95491 18.9389ZM20.0451 18.9389L19.4383 18.4981L20.0451 18.9389ZM18.9389 20.0451L18.4981 19.4383L18.9389 20.0451ZM18.9389 3.95491L18.4981 4.56168L18.9389 3.95491ZM20.0451 5.06107L19.4383 5.50191L20.0451 5.06107ZM5.06107 3.95491L5.50191 4.56168L5.06107 3.95491ZM3.95491 5.06107L4.56168 5.50191L3.95491 5.06107ZM15.7367 7.70175L15.3611 7.05125L14.0621 7.80125L14.4377 8.45175L15.7367 7.70175ZM9.93799 16.1988L9.56243 15.5483L8.26339 16.2983L8.63895 16.9488L9.93799 16.1988ZM12.6112 13.0239C14.3673 13.6699 14.5733 16.071 12.9528 17.0066L13.7028 18.3056C16.4247 16.7341 16.0787 12.7011 13.129 11.6161L12.6112 13.0239ZM10.2973 5.69439C7.57541 7.26586 7.92137 11.2989 10.8711 12.3839L11.3889 10.9761C9.63275 10.3301 9.42679 7.92902 11.0473 6.99343L10.2973 5.69439ZM12 20.25C10.1084 20.25 8.74999 20.249 7.69804 20.135C6.66013 20.0225 6.00992 19.8074 5.50191 19.4383L4.62023 20.6518C5.42656 21.2377 6.37094 21.5 7.53648 21.6263C8.68798 21.751 10.1418 21.75 12 21.75V20.25ZM2.25 12C2.25 13.8582 2.24897 15.312 2.37373 16.4635C2.50001 17.6291 2.76232 18.5734 3.34815 19.3798L4.56168 18.4981C4.19259 17.9901 3.97745 17.3399 3.865 16.302C3.75103 15.25 3.75 13.8916 3.75 12H2.25ZM5.50191 19.4383C5.14111 19.1762 4.82382 18.8589 4.56168 18.4981L3.34815 19.3798C3.70281 19.8679 4.13209 20.2972 4.62023 20.6518L5.50191 19.4383ZM20.25 12C20.25 13.8916 20.249 15.25 20.135 16.302C20.0225 17.3399 19.8074 17.9901 19.4383 18.4981L20.6518 19.3798C21.2377 18.5734 21.5 17.6291 21.6263 16.4635C21.751 15.312 21.75 13.8582 21.75 12H20.25ZM12 21.75C13.8582 21.75 15.312 21.751 16.4635 21.6263C17.6291 21.5 18.5734 21.2377 19.3798 20.6518L18.4981 19.4383C17.9901 19.8074 17.3399 20.0225 16.302 20.135C15.25 20.249 13.8916 20.25 12 20.25V21.75ZM19.4383 18.4981C19.1762 18.8589 18.8589 19.1762 18.4981 19.4383L19.3798 20.6518C19.8679 20.2972 20.2972 19.8679 20.6518 19.3798L19.4383 18.4981ZM12 3.75C13.8916 3.75 15.25 3.75103 16.302 3.865C17.3399 3.97745 17.9901 4.19259 18.4981 4.56168L19.3798 3.34815C18.5734 2.76232 17.6291 2.50001 16.4635 2.37373C15.312 2.24897 13.8582 2.25 12 2.25V3.75ZM21.75 12C21.75 10.1418 21.751 8.68798 21.6263 7.53648C21.5 6.37094 21.2377 5.42656 20.6518 4.62023L19.4383 5.50191C19.8074 6.00992 20.0225 6.66013 20.135 7.69804C20.249 8.74999 20.25 10.1084 20.25 12H21.75ZM18.4981 4.56168C18.8589 4.82382 19.1762 5.14111 19.4383 5.50191L20.6518 4.62023C20.2972 4.13209 19.8679 3.70281 19.3798 3.34815L18.4981 4.56168ZM12 2.25C10.1418 2.25 8.68798 2.24897 7.53648 2.37373C6.37094 2.50001 5.42656 2.76232 4.62023 3.34815L5.50191 4.56168C6.00992 4.19259 6.66013 3.97745 7.69804 3.865C8.74999 3.75103 10.1084 3.75 12 3.75V2.25ZM3.75 12C3.75 10.1084 3.75103 8.74999 3.865 7.69804C3.97745 6.66013 4.19259 6.00992 4.56168 5.50191L3.34815 4.62023C2.76232 5.42656 2.50001 6.37094 2.37373 7.53648C2.24897 8.68798 2.25 10.1418 2.25 12H3.75ZM4.62023 3.34815C4.13209 3.70281 3.70281 4.13209 3.34815 4.62023L4.56168 5.50191C4.82382 5.14111 5.14111 4.82382 5.50191 4.56168L4.62023 3.34815ZM15.3611 7.05125C14.6409 5.80371 13.3055 5.13444 11.9624 5.20191L12.0376 6.70002C12.8406 6.65969 13.6341 7.06 14.0621 7.80125L15.3611 7.05125ZM11.9624 5.20191C11.3932 5.2305 10.8225 5.39113 10.2973 5.69439L11.0473 6.99343C11.3619 6.81181 11.7005 6.71696 12.0376 6.70002L11.9624 5.20191ZM12.75 5.95097V5H11.25V5.95097H12.75ZM12.7501 12L12.75 5.95096L11.25 5.95097L11.2501 12L12.7501 12ZM10.8711 12.3839L11.7411 12.7039L12.259 11.2961L11.3889 10.9761L10.8711 12.3839ZM11.7411 12.7039L12.6112 13.0239L13.129 11.6161L12.259 11.2961L11.7411 12.7039ZM12.75 19L12.75 18.049L11.25 18.049L11.25 19L12.75 19ZM12.75 18.049L12.7501 12L11.2501 12L11.25 18.049L12.75 18.049ZM12.9528 17.0066C12.6382 17.1882 12.2996 17.2831 11.9624 17.3L12.0376 18.7981C12.6068 18.7695 13.1775 18.6089 13.7028 18.3056L12.9528 17.0066ZM11.9624 17.3C11.1595 17.3403 10.3659 16.94 9.93799 16.1988L8.63895 16.9488C9.3592 18.1963 10.6945 18.8655 12.0376 18.7981L11.9624 17.3Z"
                          fill="#FAFAFA"
                        />
                      </svg>

                      <span className="tw-text-[14px] tw-font-[500] tw-ml-3">
                        Giá cả
                      </span>
                    </div>

                    <Checkbox.Group
                      style={{ width: "100%" }}
                      onChange={(e) => setFieldValue("price_each", e)}
                    >
                      <Space className="tw-px-3 tw-w-full" direction="vertical">
                        {PRICE_LIST.map((i) => {
                          return (
                            <div
                              key={i.value}
                              className="tw-flex tw-w-full tw-justify-between"
                            >
                              <div className="tw-text-[#ffffffcc]">{i.label}</div>
                              <Checkbox name="price_each" value={i.value}></Checkbox>
                            </div>
                          );
                        })}
                      </Space>
                    </Checkbox.Group>
                  </div>
                  <div className="tw-w-1/3 tw-px-3">
                    <div className=" tw-mb-3 tw-flex">
                      <svg
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M8 12H7.25H8ZM16 12H16.75H16ZM12 16V16.75V16ZM14.0694 21.7856L14.2238 22.5195L14.0694 21.7856ZM9.9306 21.7856L9.77616 22.5195L9.9306 21.7856ZM2.73861 8.22119L2.04429 7.93761H2.04429L2.73861 8.22119ZM2.21438 14.0694L1.48045 14.2238L2.21438 14.0694ZM9.9306 2.21438L9.77616 1.48045L9.9306 2.21438ZM14.0694 2.21438L14.2238 1.48046L14.0694 2.21438ZM21.1808 8.25728L21.3985 8.97499L21.1808 8.25728ZM2.81797 8.25692L3.03567 7.53921L2.81797 8.25692ZM20.5681 8.50731C21.0075 9.58399 21.25 10.7627 21.25 12H22.75C22.75 10.5651 22.4685 9.19407 21.9569 7.94055L20.5681 8.50731ZM21.25 12C21.25 12.6573 21.1816 13.2978 21.0517 13.915L22.5195 14.2238C22.6707 13.5057 22.75 12.7617 22.75 12H21.25ZM21.0517 13.915C20.3002 17.4862 17.4862 20.3002 13.915 21.0517L14.2238 22.5195C18.377 21.6456 21.6456 18.377 22.5195 14.2238L21.0517 13.915ZM13.915 21.0517C13.2978 21.1816 12.6573 21.25 12 21.25V22.75C12.7617 22.75 13.5057 22.6707 14.2238 22.5195L13.915 21.0517ZM12 21.25C11.3427 21.25 10.7022 21.1816 10.085 21.0517L9.77616 22.5195C10.4943 22.6707 11.2383 22.75 12 22.75V21.25ZM2.75 12C2.75 10.7618 2.99289 9.58215 3.43293 8.50478L2.04429 7.93761C1.53198 9.19193 1.25 10.564 1.25 12H2.75ZM10.085 21.0517C6.51382 20.3002 3.69976 17.4862 2.94831 13.915L1.48045 14.2238C2.35435 18.377 5.62305 21.6456 9.77616 22.5195L10.085 21.0517ZM2.94831 13.915C2.81844 13.2978 2.75 12.6573 2.75 12H1.25C1.25 12.7617 1.32934 13.5057 1.48045 14.2238L2.94831 13.915ZM3.43293 8.50478C4.57824 5.70064 7.06086 3.58466 10.085 2.94831L9.77616 1.48045C6.25736 2.22088 3.37486 4.6799 2.04429 7.93761L3.43293 8.50478ZM10.085 2.94831C10.7022 2.81844 11.3427 2.75 12 2.75V1.25C11.2383 1.25 10.4943 1.32934 9.77616 1.48045L10.085 2.94831ZM12 2.75C12.6573 2.75 13.2978 2.81844 13.915 2.94831L14.2238 1.48046C13.5057 1.32934 12.7617 1.25 12 1.25V2.75ZM13.915 2.94831C16.9401 3.58485 19.4233 5.70192 20.5681 8.50731L21.9569 7.94055C20.6269 4.68138 17.7437 2.22111 14.2238 1.48046L13.915 2.94831ZM13.3549 2.44237C13.6308 3.30712 14.6522 6.63305 15.0708 9.68885L16.557 9.48526C16.1197 6.29348 15.064 2.86407 14.7839 1.9864L13.3549 2.44237ZM15.0708 9.68885C15.183 10.5078 15.25 11.2943 15.25 12H16.75C16.75 11.2056 16.6751 10.3476 16.557 9.48526L15.0708 9.68885ZM20.9632 7.53956C19.8657 7.87243 17.8043 8.45704 15.6778 8.84951L15.95 10.3246C18.1556 9.91754 20.2773 9.31505 21.3985 8.97499L20.9632 7.53956ZM15.6778 8.84951C14.3878 9.0876 13.0997 9.25 12 9.25V10.75C13.2292 10.75 14.6179 10.5705 15.95 10.3246L15.6778 8.84951ZM15.25 12C15.25 13.0455 15.1032 14.2621 14.8836 15.4899L16.3602 15.7539C16.5874 14.4833 16.75 13.1698 16.75 12H15.25ZM14.8836 15.4899C14.4025 18.1811 13.5941 20.808 13.3549 21.5576L14.7839 22.0136C15.0294 21.2443 15.8615 18.5432 16.3602 15.7539L14.8836 15.4899ZM21.5576 13.3549C20.808 13.5941 18.1811 14.4025 15.4899 14.8836L15.7539 16.3602C18.5432 15.8615 21.2443 15.0294 22.0136 14.7839L21.5576 13.3549ZM15.4899 14.8836C14.2621 15.1032 13.0455 15.25 12 15.25V16.75C13.1698 16.75 14.4833 16.5874 15.7539 16.3602L15.4899 14.8836ZM12 15.25C10.9545 15.25 9.73787 15.1032 8.51007 14.8836L8.24606 16.3602C9.51671 16.5874 10.8302 16.75 12 16.75V15.25ZM8.51007 14.8836C5.81886 14.4025 3.19197 13.5941 2.44237 13.3549L1.9864 14.7839C2.75568 15.0294 5.45684 15.8615 8.24606 16.3602L8.51007 14.8836ZM7.25 12C7.25 13.1698 7.41258 14.4833 7.63977 15.7539L9.11636 15.4899C8.89683 14.2621 8.75 13.0455 8.75 12H7.25ZM7.63977 15.7539C8.13848 18.5432 8.97063 21.2443 9.21609 22.0136L10.6451 21.5576C10.4059 20.808 9.59754 18.1811 9.11636 15.4899L7.63977 15.7539ZM9.21609 1.9864C8.93604 2.86407 7.8803 6.29348 7.44304 9.48526L8.92916 9.68885C9.34779 6.63305 10.3692 3.30712 10.6451 2.44237L9.21609 1.9864ZM7.44304 9.48526C7.32491 10.3476 7.25 11.2056 7.25 12H8.75C8.75 11.2943 8.81697 10.5078 8.92916 9.68885L7.44304 9.48526ZM12 9.25C10.9003 9.25 9.61224 9.0876 8.32222 8.84951L8.04998 10.3246C9.38211 10.5705 10.7708 10.75 12 10.75V9.25ZM8.32222 8.84951C6.1949 8.4569 4.13286 7.87202 3.03567 7.53921L2.60027 8.97463C3.72115 9.31462 5.84361 9.9174 8.04998 10.3246L8.32222 8.84951ZM20.9169 7.55831C20.9302 7.55142 20.946 7.54476 20.9632 7.53956L21.3985 8.97499C21.4725 8.95255 21.5421 8.92382 21.6081 8.88955L20.9169 7.55831ZM2.34732 8.86103C2.42503 8.90856 2.50939 8.94706 2.60027 8.97463L3.03567 7.53921C3.07033 7.54972 3.10229 7.56448 3.1299 7.58136L2.34732 8.86103Z"
                          fill="#FAFAFA"
                        />
                      </svg>
                      <span className="tw-text-[14px] tw-font-[500] tw-ml-3">
                        Đất nước
                      </span>
                    </div>

                    <Checkbox.Group
                      style={{ width: "100%" }}
                      onChange={(e) => setFieldValue("country", e)}
                    >
                      <Space className="tw-px-3 tw-w-full" direction="vertical">
                        {COUNTRY_LIST.map((i) => {
                          return (
                            <div
                              key={i.value}
                              className="tw-flex tw-w-full tw-justify-between"
                            >
                              <div className="tw-text-[#ffffffcc]">{i.label}</div>
                              <Checkbox name="country" value={i.value}></Checkbox>
                            </div>
                          );
                        })}
                      </Space>
                    </Checkbox.Group>
                  </div>
                </div>
                <div className="tw-flex tw-items-center tw-justify-end tw-w-full tw-mb-4">
                    <Button type="default" onClick={handleCancel}>
                      Huỷ bỏ
                    </Button>
                    <Button
                      onClick={() => handleSubmit(values)}
                      className="tw-ml-3"
                      type="primary"
                    >
                      Lọc
                    </Button>
                  </div>
              </div>
            );
          }}
        </Formik>
      </Modal>
    </LauoutDefault>
  );
};

export default ProductUser;
